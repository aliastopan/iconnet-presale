<FluentStack Orientation="Orientation.Vertical"
    HorizontalAlignment="HorizontalAlignment.Center"
    VerticalAlignment="VerticalAlignment.Center">

    <FluentTextField @bind-Value=SignInModel.Username
        Immediate="true"
        Placeholder="Username"
        Class="username-textfield"></FluentTextField>

    <FluentTextField @bind-Value=SignInModel.Password
        Immediate="true"
        Placeholder="Password"
        TextFieldType="TextFieldType.Password"
        Class="password-textfield"></FluentTextField>

    <FluentButton Class="sign-in-button"
        Type="ButtonType.Submit"
        Appearance="Appearance.Accent"
        IconStart="@(new Icons.Filled.Size20.ArrowEnter())"
        OnClick="@SubmitAsync">
        Sign-In</FluentButton>

    <FluentButton Class="sign-in-button-guest"
        Appearance="Appearance.Lightweight"
        IconStart="@(new Icons.Filled.Size20.Guest())"
        OnClick="@ToggleGuestMode">
        Sign as Guest</FluentButton>

@if (ErrorMessage.HasValue())
{
    <div class="error-warning-container">
        <FluentIcon Value="@(new Icons.Regular.Size20.ErrorCircle())" />
        <span class="px-1">@ErrorMessage</span>
    </div>
}
else
{
    <span>&nbsp</span>
}

</FluentStack>

<FluentOverlay @bind-Visible=@IsLoading
    Opacity="0.4"
    Alignment="@Align.Center"
    Justification="@JustifyContent.Center">
    <FluentProgressRing />
</FluentOverlay>
