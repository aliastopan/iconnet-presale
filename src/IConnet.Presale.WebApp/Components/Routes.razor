@rendermode InteractiveServer

@using IConnet.Presale.WebApp.Services

@inject IHttpContextAccessor _httpContextAccessor
@inject NotificationService _notificationService

@if (isPreRender)
{
    <Splash />
    return;
}
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)" />
            <FocusOnNavigate RouteData="@routeData" Selector="none" />
        </Found>
    </Router>
</CascadingAuthenticationState>

@code
{
    private bool isPreRender;

    protected override async Task OnInitializedAsync()
    {
        isPreRender = !(_httpContextAccessor.HttpContext is not null
            && _httpContextAccessor.HttpContext.Response.HasStarted);

        await _notificationService.StartConnectionAsync();
    }
}