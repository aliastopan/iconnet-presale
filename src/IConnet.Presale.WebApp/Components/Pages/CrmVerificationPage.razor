@page "/crm-verification"
@rendermode InteractiveServer

@using IConnet.Presale.Domain.Aggregates.Presales
@using IConnet.Presale.Domain.Enums
@using IConnet.Presale.WebApp.Services

@inject IWorkloadManager _workloadManager
@inject IDateTimeService _dateTimeService
@inject IDialogService _dialogService
@inject NotificationService _notificationService

<PageTitle>Verifikasi CRM</PageTitle>

<FluentLabel Typo="Typography.H3" MarginBlock="0.5rem">Verifikasi CRM</FluentLabel>
<span class="page-description">Verifikasi hasil import iCRM+</span>

<div class="datagrid-wrapper">
    @if (_workPapers is not null)
    {
        <FluentDataGrid Items="@_workPapers"
            TGridItem="WorkPaper"
            Virtualize="true"
            Pagination="@_pagination"
            ItemSize="32"
            OnRowFocus="@OnRowSelected"
            EmptyContent="@HtmlFragment.EmptyContent">

            <PropertyColumn Title="ID PERMOHONAN" Property="@(crm => crm.ApprovalOpportunity.IdPermohonan)"/>
            <PropertyColumn Title="TGL PERMOHONAN" Property="@(crm => crm.ApprovalOpportunity.TglPermohonan)"/>
            <PropertyColumn Title="IMPORT SIGNATURE" Property="@(crm => crm.ApprovalOpportunity.ImportSignature.Alias)"/>
            <PropertyColumn Title="DURASI TIDAK LANJUT" Property="@(crm => _dateTimeService.GetElapsedTime(crm.ApprovalOpportunity.TglPermohonan).AsReadableDateTime())"/>
            <PropertyColumn Title="NAMA PEMOHON" Property="@(crm => crm.ApprovalOpportunity.Pemohon.NamaLengkap)"/>
            <PropertyColumn Title="ID PLN" Property="@(crm => crm.ApprovalOpportunity.Pemohon.IdPln)"/>
            <PropertyColumn Title="LAYANAN" Property="@(crm => crm.ApprovalOpportunity.Layanan)"/>
            <PropertyColumn Title="SUMBER PERMOHONAN" Property="@(crm => crm.ApprovalOpportunity.SumberPermohonan)"/>
            <PropertyColumn Title="STATUS PERMOHONAN" Property="@(crm => crm.ApprovalOpportunity.StatusPermohonan)"/>
            <PropertyColumn Title="NAMA AGEN" Property="@(crm => crm.ApprovalOpportunity.Agen.NamaLengkap)"/>
            <PropertyColumn Title="EMAIL AGEN" Property="@(crm => crm.ApprovalOpportunity.Agen.Email)"/>
            <PropertyColumn Title="TELEPON AGEN" Property="@(crm => crm.ApprovalOpportunity.Agen.NomorTelepon)"/>
            <PropertyColumn Title="MITRA AGEN" Property="@(crm => crm.ApprovalOpportunity.Agen.Mitra)"/>
            <PropertyColumn Title="SPLITTER" Property="@(crm => crm.ApprovalOpportunity.Splitter)"/>
            <PropertyColumn Title="JENIS PERMOHONAN" Property="@(crm => crm.ApprovalOpportunity.JenisPermohonan)"/>
            <PropertyColumn Title="TELEPON PEMOHON" Property="@(crm => crm.ApprovalOpportunity.Pemohon.NomorTelepon)"/>
            <PropertyColumn Title="EMAIL PEMOHON" Property="@(crm => crm.ApprovalOpportunity.Pemohon.Email)"/>
            <PropertyColumn Title="NIK PEMOHON" Property="@(crm => crm.ApprovalOpportunity.Pemohon.Nik)"/>
            <PropertyColumn Title="NPWP PEMOHON" Property="@(crm => crm.ApprovalOpportunity.Pemohon.Npwp)"/>
            <PropertyColumn Title="KETERANGAN" Property="@(crm => crm.ApprovalOpportunity.Pemohon.Keterangan)"/>
            <PropertyColumn Title="ALAMAT PEMOHON" Property="@(crm => crm.ApprovalOpportunity.Pemohon.Alamat)"/>
            <PropertyColumn Title="REGIONAL" Property="@(crm => crm.ApprovalOpportunity.Regional.Bagian)"/>
            <PropertyColumn Title="KANTOR PERWAKILAN" Property="@(crm => crm.ApprovalOpportunity.Regional.KantorPerwakilan)"/>
            <PropertyColumn Title="PROVINSI" Property="@(crm => crm.ApprovalOpportunity.Regional.Provinsi)"/>
            <PropertyColumn Title="KABUPATEN" Property="@(crm => crm.ApprovalOpportunity.Regional.Kabupaten)"/>
            <PropertyColumn Title="KECAMATAN" Property="@(crm => crm.ApprovalOpportunity.Regional.Kecamatan)"/>
            <PropertyColumn Title="KELURAHAN" Property="@(crm => crm.ApprovalOpportunity.Regional.Kelurahan)"/>
            <PropertyColumn Title="LATITUDE" Property="@(crm => crm.ApprovalOpportunity.Regional.Koordinat.Latitude)"/>
            <PropertyColumn Title="LONGITUDE" Property="@(crm => crm.ApprovalOpportunity.Regional.Koordinat.Longitude)"/>

        </FluentDataGrid>
    }
    else
    {
        <span>Loading...</span>
    }
</div>

<FluentPaginator State="@_pagination">
    <SummaryTemplate>
        Terdapat <strong>@(_pagination.TotalItemCount ?? 0)</strong> baris
    </SummaryTemplate>
    <PaginationTextTemplate>
        Halaman <strong>@(_pagination.CurrentPageIndex + 1)</strong> dari <strong>@(_pagination.LastPageIndex + 1)</strong> halaman
    </PaginationTextTemplate>
</FluentPaginator>

@code
{
    private const int _itemPerPage = 10;
    private PaginationState _pagination = new PaginationState { ItemsPerPage = _itemPerPage };

    private IQueryable<WorkPaper>? _workPapers;

    protected override async Task OnInitializedAsync()
    {
        List<WorkPaper> workload = await _workloadManager.FetchWorkloadAsync(CacheFetchMode.OnlyImportUnverified);
        _workPapers = workload.AsQueryable();

        _notificationService.Subscribe(OnUpdateWorkloadAsync);
    }

    private async Task OnUpdateWorkloadAsync(string message)
    {
        List<WorkPaper> workload = await _workloadManager.FetchWorkloadAsync(CacheFetchMode.OnlyImportUnverified);
        _workPapers = workload.AsQueryable();

        Log.Warning(message);

        // ensure component update is handle by UI thread
        await InvokeAsync(() =>
        {
            StateHasChanged();
            Log.Warning("Re-render 'CRM Verify Page'.");
        });
    }

    private async Task OnRowSelected(FluentDataGridRow<WorkPaper> row)
    {
        if (row.Item is not null)
        {
            await OpenDialogAsync(row.Item);
        }
    }

    private async Task OpenDialogAsync(WorkPaper workPaper)
    {
        Log.Warning("Import status before: {0}", workPaper.ApprovalOpportunity.StatusImport);
        var parameters = new DialogParameters()
        {
            Title = "Verifikasi Import CRM",
            TrapFocus = true,
            Width = "500px",
        };

        var isImportVerified = workPaper.ApprovalOpportunity.StatusImport == ImportStatus.Verified;
        if (isImportVerified)
        {
            return;
        }

        var dialog = await _dialogService.ShowDialogAsync<CrmVerificationDialog>(workPaper, parameters);
        var result = await dialog.Result;

        if (!result.Cancelled && result.Data != null)
        {
            var dialoagData = (WorkPaper)result.Data;
            await VerifyCrmAsync(dialoagData);

            Log.Warning("Import status after: {0}", dialoagData.ApprovalOpportunity.StatusImport);
        }
    }

    private async Task VerifyCrmAsync(WorkPaper workPaper)
    {
        await _workloadManager.UpdateWorkloadAsync(workPaper);

        var message = $"CRM Import of '{workPaper.ApprovalOpportunity.IdPermohonan}' has been verified";
        await _notificationService.BroadcastNotificationAsync(message);
    }
}