@attribute [Route(PageRoute.Developer)]
@inherits DeveloperPageBase
@rendermode @(InteractiveServer.DisablePreRender())

<PageTitle>Developer Access</PageTitle>

<AuthorizeView Policy="@Policies.DeveloperAccess"
    Context="AuthenticationContext">

    <Authorized>

        <div class="d-flex flex-row align-items-center">
            <FluentLabel Typo="Typography.H3" MarginBlock="0.5rem">Dev's Backdoor</FluentLabel>
        </div>
        <div class="d-flex flex-column align-items-start">
            <span class="page-description">Developer only page</span>
        </div>

        <div>
            @if (PresaleData is not null)
            {
                <div>Presale Data: @PresaleData.Count()</div>
                <div>Operator: @UserOperatorModels.Count</div>

                <table style="width: fit-content;">
                    <thead>
                        <tr>
                            <th rowspan="2">STATUS</th>
                            <th colspan="@ApprovalStatusReportModels.SelectMany(m => m.StatusPerOffice.Keys).Distinct().Count()">
                                KANTOR PERWAKILAN
                            </th>
                            <th rowspan="2">Grand Total</th>
                        </tr>
                        <tr>
                            @foreach (var office in ApprovalStatusReportModels.SelectMany(m => m.StatusPerOffice.Keys).Distinct())
                            {
                                <th>@office</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var model in ApprovalStatusReportModels)
                        {
                            <tr>
                                <td>@model.ApprovalStatusDisplay</td>
                                @foreach (var office in ApprovalStatusReportModels.SelectMany(m => m.StatusPerOffice.Keys).Distinct())
                                {
                                    <td>
                                    @if (model.StatusPerOffice.ContainsKey(office))
                                    {
                                        @model.StatusPerOffice[office]
                                    }
                                    else
                                    {
                                        <span>-</span>
                                    }
                                    </td>
                                }
                                <td>@model.GrandTotal</td>
                            </tr>
                        }
                        <tr>
                            <td>Grand Total</td>
                            @foreach (var office in ApprovalStatusReportModels.SelectMany(m => m.StatusPerOffice.Keys).Distinct())
                            {
                                <td>@ApprovalStatusReportModels.Sum(m => m.StatusPerOffice.GetValueOrDefault(office, 0))</td>
                            }
                            <td>@ApprovalStatusReportModels.Sum(m => m.GrandTotal)</td>
                        </tr>
                    </tbody>
                </table>

            }
            else
            {
                <FluentProgressRing />
            }
        </div>

    </Authorized>

    <NotAuthorized>
        <AccessDenied />
    </NotAuthorized>

</AuthorizeView>
