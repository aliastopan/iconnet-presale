@page "/crm-import"
@rendermode InteractiveServer

@using IConnet.Presale.Shared.Interfaces.Models.Presales
@using IConnet.Presale.WebApp.Helpers
@using IConnet.Presale.WebApp.Models.Presales
@using IConnet.Presale.WebApp.Services

@inject IJSRuntime _js
@inject IWorkloadManager _workloadManager
@inject CrmImportService _crmImportService
@inject BroadcastService _broadcastService

<PageTitle>Import CRM</PageTitle>

<FluentLabel Typo="Typography.H3" MarginBlock="0.5rem">Import CRM</FluentLabel>
<div class="d-flex flex-column align-items-start">
    <span class="page-description">Import iCRM+ data ke aplikasi Presale</span>
    <div style="margin-left: -5px; margin-bottom: 0.5rem;">
        <FluentButton Class="m-1"
            Appearance="Appearance.Accent"
            IconStart="@(new Icons.Regular.Size20.ArrowImport())"
            OnClick="CrmImportAsync">
            Import
        </FluentButton>
    </div>
</div>

<div class="datagrid-wrapper">
    <FluentDataGrid Items="@_importModels"
        TGridItem="IApprovalOpportunityModel"
        Virtualize="true"
        Pagination="@_pagination"
        ItemSize="32"
        EmptyContent="@HtmlFragment.EmptyContent">

        <PropertyColumn Title="ID PERMOHONAN" Property="@(crm => crm.IdPermohonan)"/>
        <PropertyColumn Title="TGL PERMOHONAN" Property="@(crm => crm.TglPermohonan)"/>
        <PropertyColumn Title="DURASI TIDAK LANJUT" Property="@(crm => crm.DurasiTidakLanjut)"/>
        <PropertyColumn Title="NAMA PEMOHON" Property="@(crm => crm.NamaPemohon)"/>
        <PropertyColumn Title="ID PLN" Property="@(crm => crm.IdPln)"/>
        <PropertyColumn Title="LAYANAN" Property="@(crm => crm.Layanan)"/>
        <PropertyColumn Title="SUMBER PERMOHONAN" Property="@(crm => crm.SumberPermohonan)"/>
        <PropertyColumn Title="STATUS PERMOHONAN" Property="@(crm => crm.StatusPermohonan)"/>
        <PropertyColumn Title="NAMA AGEN" Property="@(crm => crm.NamaAgen)"/>
        <PropertyColumn Title="EMAIL AGEN" Property="@(crm => crm.EmailAgen)"/>
        <PropertyColumn Title="TELEPON AGEN" Property="@(crm => crm.TeleponAgen)"/>
        <PropertyColumn Title="MITRA AGEN" Property="@(crm => crm.MitraAgen)"/>
        <PropertyColumn Title="SPLITTER" Property="@(crm => crm.Splitter)"/>
        <PropertyColumn Title="JENIS PERMOHONAN" Property="@(crm => crm.JenisPermohonan)"/>
        <PropertyColumn Title="TELEPON PEMOHON" Property="@(crm => crm.TeleponPemohon)"/>
        <PropertyColumn Title="EMAIL PEMOHON" Property="@(crm => crm.EmailPemohon)"/>
        <PropertyColumn Title="NIK PEMOHON" Property="@(crm => crm.NikPemohon)"/>
        <PropertyColumn Title="NPWP PEMOHON" Property="@(crm => crm.NpwpPemohon)"/>
        <PropertyColumn Title="KETERANGAN" Property="@(crm => crm.Keterangan)"/>
        <PropertyColumn Title="ALAMAT PEMOHON" Property="@(crm => crm.AlamatPemohon)"/>
        <PropertyColumn Title="REGIONAL" Property="@(crm => crm.Regional)"/>
        <PropertyColumn Title="KANTOR PERWAKILAN" Property="@(crm => crm.KantorPerwakilan)"/>
        <PropertyColumn Title="PROVINSI" Property="@(crm => crm.Provinsi)"/>
        <PropertyColumn Title="KABUPATEN" Property="@(crm => crm.Kabupaten)"/>
        <PropertyColumn Title="KECAMATAN" Property="@(crm => crm.Kecamatan)"/>
        <PropertyColumn Title="KELURAHAN" Property="@(crm => crm.Kelurahan)"/>
        <PropertyColumn Title="LATITUDE" Property="@(crm => crm.Latitude)"/>
        <PropertyColumn Title="LONGITUDE" Property="@(crm => crm.Longitude)"/>

    </FluentDataGrid>

    <FluentOverlay @bind-Visible=@_isLoading
        Opacity="0.4"
        Alignment="@Align.Center"
        Justification="@JustifyContent.Center">
        <FluentProgressRing />
    </FluentOverlay>
</div>

<FluentPaginator State="@_pagination">
    <SummaryTemplate>
        Terdapat <strong>@(_pagination.TotalItemCount ?? 0)</strong> baris
    </SummaryTemplate>
    <PaginationTextTemplate>
        Halaman <strong>@(_pagination.CurrentPageIndex + 1)</strong> dari <strong>@(_pagination.LastPageIndex + 1)</strong> halaman
    </PaginationTextTemplate>
</FluentPaginator>

@if (!EnableMessageBar)
{
    return;
}

@if (!_importMetadata.IsValidImport)
{
    <FluentMessageBar Class="my-2" Title="Error" Intent="@MessageIntent.Error">
        Proses import gagal. Jumlah kolom dan baris tidak sesuai.
    </FluentMessageBar>
}

@if (_importCount > 0)
{
    <FluentMessageBar Class="my-2" Title="Success" Intent="@MessageIntent.Success">
        @_importCount dari @_importMetadata!.NumberOfRows data telah berhasil di-import.
    </FluentMessageBar>
}

@if (_importMetadata!.NumberOfDuplicates > 0)
{
    <FluentMessageBar Class="my-2" Title="Warning" Intent="@MessageIntent.Warning">
        Terdapat @_importMetadata!.NumberOfDuplicates duplikasi saat dalam proses copy-paste dari iCRM.
    </FluentMessageBar>
}

@code
{
    private const int _itemPerPage = 10;
    private PaginationState _pagination = new PaginationState { ItemsPerPage = _itemPerPage };

    private IQueryable<IApprovalOpportunityModel>? _importModels;

    private bool _isLoading = false;
    private int _importCount = 0;
    private CrmImportMetadata _importMetadata = default!;

    public bool EnableMessageBar => _importModels is not null && _importMetadata is not null;

    private async Task CrmImportAsync()
    {
        _isLoading = true;

        string clipboard = await PasteClipboardAsync();

        (List<IApprovalOpportunityModel> importModels, CrmImportMetadata importMetadata) result;
        result = await _crmImportService.ImportAsync(clipboard);

        _importModels = _crmImportService.GetApprovalOpportunities();;

        _importCount = await _workloadManager.CacheWorkloadAsync(result.importModels);
        _importMetadata = result.importMetadata;

        _importMetadata.NumberOfDuplicates = _importMetadata.NumberOfRows - _importCount;

        if (_importMetadata.IsValidImport && _importCount > 0)
        {
            var message = $"{_importCount} CRM data has been imported.";
            await _broadcastService.BroadcastMessageAsync(message);
        }

        _isLoading = false;
    }

    private async Task<string> PasteClipboardAsync()
    {
        return await _js.InvokeAsync<string>("navigator.clipboard.readText");
    }

}